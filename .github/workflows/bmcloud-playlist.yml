- name: Generate bmcloud.m3u only if changed and log updates
        id: generate
        run: |
          npm install node-fetch@2
          node <<'EOF'
          const fs = require('fs');
          const fetch = require('node-fetch');

          const url = 'https://bmcloud.in/apis/apps/bmcloudapi.php?id=bmcloud';
          const m3uPath = 'bmcloud.m3u';
          const logPath = 'bmcloud.log';
          const prevData = fs.existsSync(m3uPath) ? fs.readFileSync(m3uPath, 'utf8') : '';

          (async () => {
            try {
              const res = await fetch(url);
              const encoded = (await res.text()).trim();

              // Base64 decode safely
              let decoded;
              try {
                decoded = Buffer.from(encoded, 'base64').toString('utf8');
              } catch (err) {
                console.error("❌ Base64 decode failed:", err);
                console.error("Raw response:", encoded.slice(0,200));
                process.exit(0);
              }

              // Parse JSON
              let json;
              try {
                json = JSON.parse(decoded);
              } catch (err) {
                console.error("❌ JSON parse failed:", err);
                console.error("Decoded text:", decoded.slice(0,200));
                process.exit(0);
              }

              let m3u = "#EXTM3U\n";
              let allChannels = [];
              for (const group of json) {
                if (group.channeldata && Array.isArray(group.channeldata)) {
                  allChannels.push(...group.channeldata);
                }
              }

              if (allChannels.length === 0) {
                console.log("❌ No channels found.");
                process.exit(0);
              }

              let changesSummary = [];
              for (const ch of allChannels) {
                const name = ch.channelname || "Unknown";
                const logo = ch.logo || "";
                const stream = ch.playbackurl || "";
                if (!stream) continue;
                const category = "General";

                const extinf = `#EXTINF:-1 tvg-name="${name}" group-title="${category}" tvg-logo="${logo}",${name}`;
                m3u += `${extinf}\n${stream}\n`;

                if (!prevData.includes(name)) {
                  changesSummary.push(`Added: ${name}`);
                }
              }

              // Check removals
              const oldNames = prevData.split('\n')
                .filter(line => line.startsWith('#EXTINF'))
                .map(line => line.split(',')[1]);

              oldNames.forEach(name => {
                if (!allChannels.some(ch => ch.channelname === name)) {
                  changesSummary.push(`Removed: ${name}`);
                }
              });

              if (changesSummary.length === 0) {
                console.log("ℹ️ No changes detected.");
                console.log(`changed=false`); // <-- Debug log
                require('child_process').execSync(`echo "changed=false" >> $GITHUB_OUTPUT`);
                return;
              }

              // Write new playlist
              fs.writeFileSync(m3uPath, m3u);

              // Append log
              const timestamp = new Date().toISOString();
              fs.appendFileSync(logPath, `\n[${timestamp}] ${changesSummary.join('; ')}\n`);

              console.log("✅ bmcloud.m3u updated");
              require('child_process').execSync(`echo "changed=true" >> $GITHUB_OUTPUT`);
              require('child_process').execSync(`echo "summary=${changesSummary.join('; ')}" >> $GITHUB_OUTPUT`);

            } catch (err) {
              console.error("❌ Fatal error:", err);
              require('child_process').execSync(`echo "changed=false" >> $GITHUB_OUTPUT`);
            }
          })();
          EOF
