name: Auto-update bmcloud.m3u

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Generate playlist/bmcloud.m3u only if changed
        id: generate
        run: |
          npm install node-fetch@2
          mkdir -p playlist
          node <<'EOF'
          const fs = require('fs');
          const fetch = require('node-fetch');

          const url = 'https://as.al/raw/NyCqwJ';
          const filePath = 'playlist/bmcloud.m3u';
          const prevData = fs.existsSync(filePath) ? fs.readFileSync(filePath, 'utf8') : '';

          (async () => {
            try {
              const res = await fetch(url);
              const json = await res.json();

              if (!Array.isArray(json) || json.length === 0) {
                console.log("Invalid JSON or no data found.");
                fs.appendFileSync(process.env.GITHUB_OUTPUT, "changed=false\n");
                return;
              }

              const category = "Bm Cloud";
              let m3u = "#EXTM3U\n";
              let changesSummary = [];

              // Map old channels
              const oldChannels = {};
              prevData.split('\n').forEach((line, i, arr) => {
                if (line.startsWith('#EXTINF')) {
                  const name = line.split(',')[1];
                  const stream = arr[i + 1];
                  oldChannels[name] = { extinf: line, stream };
                }
              });

              const currentNames = [];

              for (const ch of json) {
                const name = ch.name || "Unknown";
                const logo = ch.imageurl || "";
                const stream = ch.videourl || "";
                if (!stream) continue;

                const extinf = `#EXTINF:-1 tvg-name="${name}" group-title="${category}" tvg-logo="${logo}",${name}`;
                m3u += `${extinf}\n${stream}\n`;
                currentNames.push(name);

                if (!oldChannels[name]) {
                  changesSummary.push(`Added: ${name}`);
                } else if (oldChannels[name].extinf !== extinf || oldChannels[name].stream !== stream) {
                  changesSummary.push(`Updated: ${name}`);
                }
              }

              Object.keys(oldChannels).forEach(name => {
                if (!currentNames.includes(name)) {
                  changesSummary.push(`Removed: ${name}`);
                }
              });

              if (changesSummary.length === 0) {
                console.log("No changes detected. Skipping file update.");
                fs.appendFileSync(process.env.GITHUB_OUTPUT, "changed=false\n");
                return;
              }

              fs.writeFileSync(filePath, m3u);
              console.log("✅ playlist/bmcloud.m3u updated successfully.");
              console.log("Summary:", changesSummary.join('; '));
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `changed=true\nsummary=${changesSummary.join('; ')}\n`);

            } catch (err) {
              console.error("❌ Error fetching channels:", err);
              fs.appendFileSync(process.env.GITHUB_OUTPUT, "changed=false\n");
            }
          })();
          EOF

      - name: Commit and push if changed
        if: steps.generate.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add playlist/bmcloud.m3u
          git commit -m "Auto-update playlist/bmcloud.m3u [skip ci] - ${{ steps.generate.outputs.summary }}"
          git push
