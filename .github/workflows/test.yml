name: Auto-update test.m3u

on:
  schedule:
    - cron: "*/15 * * * *" # every 15 minutes
  workflow_dispatch:

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 📦 Install dependencies
        run: |
          pip install requests

      - name: ⚙️ Fetch, decode and generate M3U
        id: generate
        run: |
          mkdir -p assets/playlist
          cat > bmcloud_worker.py <<'EOF'
          import requests, base64, json, urllib.parse, zlib, gzip, os

          API_URL = "https://bmcloud.in/apis/apps/bmcloudapi.php?id=bmcloud"
          OUTPUT_JSON = "out.json"
          OUTPUT_M3U = "assets/playlist/test.m3u"

          def try_decode_level6(data, max_level=6):
              for level in range(1, max_level + 1):
                  try:
                      decoded_json = json.loads(data)
                      return decoded_json
                  except:
                      pass
                  try:
                      b64_decoded = base64.b64decode(data, validate=True)
                      data = b64_decoded.decode('utf-8', errors='ignore')
                      continue
                  except:
                      pass
                  url_decoded = urllib.parse.unquote_plus(data)
                  if url_decoded != data:
                      data = url_decoded
                      continue
                  try:
                      gz_decoded = gzip.decompress(data.encode('latin1'))
                      data = gz_decoded.decode('utf-8', errors='ignore')
                      continue
                  except:
                      pass
                  try:
                      z_decoded = zlib.decompress(data.encode('latin1'))
                      data = z_decoded.decode('utf-8', errors='ignore')
                      continue
                  except:
                      pass
                  break
              try:
                  return json.loads(data)
              except:
                  return data

          def fetch_and_convert():
              print(f"📡 Fetching {API_URL}")
              resp = requests.get(API_URL, timeout=20)
              resp.raise_for_status()
              decoded = try_decode_level6(resp.text.strip())

              with open(OUTPUT_JSON, "w", encoding="utf-8") as f:
                  if isinstance(decoded, str):
                      f.write(decoded)
                  else:
                      json.dump(decoded, f, indent=2, ensure_ascii=False)

              if isinstance(decoded, dict) and "channels" in decoded:
                  os.makedirs(os.path.dirname(OUTPUT_M3U), exist_ok=True)
                  with open(OUTPUT_M3U, "w", encoding="utf-8") as f:
                      f.write("#EXTM3U\n")
                      for ch in decoded["channels"]:
                          name = ch.get("name") or ch.get("title") or "Unknown"
                          logo = ch.get("logo", "")
                          url = ch.get("url", "")
                          group = ch.get("category", "General")
                          f.write(f'#EXTINF:-1 tvg-logo="{logo}" group-title="{group}",{name}\n{url}\n')
                  print(f"✅ M3U file generated: {OUTPUT_M3U}")
              else:
                  print("⚠️ Unexpected structure or no channels key found.")

          if __name__ == "__main__":
              fetch_and_convert()
          EOF

          python bmcloud_worker.py

          if git diff --quiet assets/playlist/test.m3u; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: 💾 Commit and push if changed
        if: steps.generate.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add assets/playlist/test.m3u out.json
          git commit -m "Auto-update test.m3u [skip ci]"
          git push
