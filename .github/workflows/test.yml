name: test

on:
  schedule:
    - cron: "*/5 * * * *" # Every 5 minutes
  workflow_dispatch:

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Generate filtered test.m3u
        id: generate
        run: |
          npm install node-fetch@2
          node <<'EOF'
          const fs = require('fs');
          const fetch = require('node-fetch');

          const url = 'https://raw.githubusercontent.com/alex8875/m3u/refs/heads/main/jstar.m3u';
          const outputFile = 'assets/playlist/test.m3u';
          const prevData = fs.existsSync(outputFile) ? fs.readFileSync(outputFile, 'utf8') : '';

          // Tamil and Telugu channel IDs
          const tamilIDs = [368, 1130, 1131, 673, 682, 895, 896];
          const teluguIDs = [684, 729, 897];

          (async () => {
            try {
              const res = await fetch(url);
              const playlist = await res.text();
              if (!playlist || !playlist.includes('#EXTINF')) {
                console.log("No valid playlist data found.");
                process.exit(0);
              }

              const lines = playlist.split('\n');
              let filtered = ['#EXTM3U'];
              let currentBlock = [];

              for (const line of lines) {
                if (line.startsWith('#EXTINF')) {
                  // When new EXTINF starts, check if previous block matches
                  if (currentBlock.length) {
                    const blockText = currentBlock.join('\n');
                    filtered.push(blockText);
                    currentBlock = [];
                  }
                  currentBlock = [line];
                } else if (currentBlock.length) {
                  currentBlock.push(line);
                }
              }
              // Push last block if any
              if (currentBlock.length) filtered.push(currentBlock.join('\n'));

              // Filter by tvg-id
              const outputBlocks = filtered.filter(block => {
                const idMatch = block.match(/tvg-id="(\d+)"/);
                if (!idMatch) return false;
                const id = parseInt(idMatch[1]);
                if (tamilIDs.includes(id)) {
                  return block.includes('group-title="Jiostar"') || true;
                }
                if (teluguIDs.includes(id)) {
                  return block.includes('group-title="Jiostar"') || true;
                }
                return false;
              });

              const finalPlaylist = ['#EXTM3U', ...outputBlocks].join('\n\n');

              if (prevData.trim() === finalPlaylist.trim()) {
                console.log("No changes detected in filtered playlist.");
                fs.appendFileSync(process.env.GITHUB_OUTPUT, `changed=false\n`);
                process.exit(0);
              }

              fs.mkdirSync('assets/playlist', { recursive: true });
              fs.writeFileSync(outputFile, finalPlaylist, 'utf8');
              console.log("Filtered playlist saved successfully.");
              fs.appendFileSync(process.env.GITHUB_OUTPUT, `changed=true\n`);
            } catch (err) {
              console.error("Error:", err);
              process.exit(1);
            }
          })();
          EOF

      - name: Commit and push if changed
        if: steps.generate.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add assets/playlist/test.m3u
          git commit -m "Auto-update filtered Jiostar Tamil & Telugu playlist [skip ci]"
          git push
