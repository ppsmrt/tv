name: Auto-update roja.m3u

on:
  schedule:
    - cron: "*/5 * * * *"  # Every 5 minutes
  workflow_dispatch:

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Generate roja.m3u
        run: |
          npm install node-fetch@2
          node <<'EOF'
          const fs = require('fs');
          const fetch = require('node-fetch');
          const crypto = require('crypto');

          const SECRET = "ROJAIPTV_CH_DB_443LOCK128";

          function generateNonce(length = 16) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join('');
          }

          function sha256(data) {
            return crypto.createHash('sha256').update(data).digest('hex');
          }

          function buildUrl() {
            const timestamp = Math.floor(Date.now() / 1000);
            const nonce = generateNonce(16);
            const signature = sha256(`${timestamp}${nonce}${SECRET}`);
            return `https://rojaiptv.site/app_datas/get_channels.php?timestamp=${timestamp}&nonce=${nonce}&signature=${signature}`;
          }

          (async () => {
            try {
              const url = buildUrl();
              console.log("Fetching:", url);
              const res = await fetch(url);
              const text = await res.text();

              let m3u = "#EXTM3U\n";

              // Detect if response is JSON or M3U
              try {
                const data = JSON.parse(text);
                for (const id of Object.keys(data)) {
                  const ch = data[id];
                  const name = ch.name || "Unknown";
                  const category = ch.category || "General";
                  const logo = ch.icon || "";
                  const stream = ch.stream || "";
                  if (!stream) continue;
                  m3u += `#EXTINF:-1 tvg-name="${name}" group-title="${category}" tvg-logo="${logo}",${name}\n${stream}\n`;
                }
              } catch {
                // Assume response is already M3U
                if (text.startsWith("#EXTM3U")) {
                  m3u = text;
                } else {
                  m3u += text;
                }
              }

              fs.writeFileSync("roja.m3u", m3u);
              console.log("✅ roja.m3u updated");

            } catch (err) {
              console.error("❌ Error fetching channels:", err);
              process.exit(1);
            }
          })();
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add roja.m3u
          git commit -m "Auto-update roja.m3u [skip ci]" || echo "No changes to commit"
          git push